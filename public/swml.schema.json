{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "SWMLMethod": {
      "anyOf": [
        {
          "description": "Execute a sequence of instructions depending on the value of a JavaScript condition.",
          "properties": {
            "cond": {
              "description": "Defines the cond structure",
              "properties": {
                "else": {
                  "description": "The list of SWML instructions to be executed if the condition is false",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                },
                "then": {
                  "description": "The list of SWML instructions to be executed if the condition is true",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                },
                "when": {
                  "description": "The condition to be evaluated and act on.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Cond",
          "type": "object"
        },
        {
          "description": "Execute a section or URL as a subroutine and return back to current document.",
          "properties": {
            "execute": {
              "description": "Defines the execute structure",
              "properties": {
                "dest": {
                  "description": "Specifies what to execute. The value can be one of:\r\n\"<label>\" - section in the current document to execute.\r\n\"https://<URL>\" - URL pointing to the document to execute. Sends HTTP POST.",
                  "type": "string"
                },
                "meta": {
                  "additionalProperties": {},
                  "description": "User-defined metadata, ignored by SignalWire",
                  "type": "object"
                },
                "on_return": {
                  "description": "The list of SWML instructions to be executed when the executed section or URL returns",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                },
                "params": {
                  "additionalProperties": {},
                  "description": "Named parameters to send to section or URL",
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Execute",
          "type": "object"
        },
        {
          "description": "Send a GET, POST, PUT, or DELETE request to a remote URL.",
          "properties": {
            "request": {
              "description": "Defines the request structure",
              "properties": {
                "body": {
                  "anyOf": [
                    {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Optional. The body of the request. Can be a string or an object."
                },
                "connect_timeout": {
                  "description": "Optional. Maximum time in seconds to wait for a connection. Default is 5.0 seconds.",
                  "type": "number"
                },
                "headers": {
                  "additionalProperties": {},
                  "description": "Optional. An object representing the headers to be included in the request.",
                  "type": "object"
                },
                "method": {
                  "description": "The HTTP method to be used for the request. Can be \"GET\", \"POST\", \"PUT\", or \"DELETE\".",
                  "enum": [
                    "DELETE",
                    "GET",
                    "POST",
                    "PUT"
                  ],
                  "type": "string"
                },
                "save_variables": {
                  "description": "Optional. Store parsed JSON response as variables. Default is false.",
                  "type": "boolean"
                },
                "timeout": {
                  "description": "Optional. Maximum time in seconds to wait for a response. Default is 5.0 seconds.",
                  "type": "number"
                },
                "url": {
                  "description": "The URL to which the request is to be sent.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Request",
          "type": "object"
        },
        {
          "description": "Return from `execute` or exit script.",
          "properties": {
            "return": {
              "additionalProperties": {},
              "description": "Defines the return structure",
              "type": "object"
            }
          },
          "title": "Return",
          "type": "object"
        },
        {
          "description": "Set script variables to the specified values.",
          "properties": {
            "set": {
              "additionalProperties": {},
              "description": "Defines the set structure",
              "type": "object"
            }
          },
          "title": "Set",
          "type": "object"
        },
        {
          "description": "Execute a sequence of instructions depending on which value matches a variable.",
          "properties": {
            "switch": {
              "description": "Defines the switch structure",
              "properties": {
                "case": {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/definitions/SWMLMethod"
                    },
                    "type": "array"
                  },
                  "description": "Object of values mapped to array of instructions to execute",
                  "type": "object"
                },
                "default": {
                  "description": "Optional array of instructions to execute if no cases match",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                },
                "variable": {
                  "description": "Name of the variable whose value needs to be compared",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Switch",
          "type": "object"
        },
        {
          "description": "Transfer the execution of the script to a new URL.",
          "properties": {
            "transfer": {
              "description": "Defines the transfer structure",
              "properties": {
                "dest": {
                  "description": "Specifies where to transfer the call. The value can be one of:\r\n\"<label>\" - section in the current document to transfer to.\r\n\"https://<URL>\" - URL pointing to the document to transfer to. Sends HTTP POST.\r\n\"relay:<relay application>\" - relay application to notify (currently not implemented)",
                  "type": "string"
                },
                "meta": {
                  "additionalProperties": {},
                  "description": "User data, ignored by SignalWire. Optional. Default is not set.",
                  "type": "object"
                },
                "params": {
                  "additionalProperties": {},
                  "description": "Named parameters to send to a section, URL, or application. Optional. Default is not set.",
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Transfer",
          "type": "object"
        },
        {
          "description": "Unset the specified variables.",
          "properties": {
            "unset": {
              "description": "Defines the unset structure",
              "properties": {
                "vars": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Names of the variables to unset."
                }
              },
              "type": "object"
            }
          },
          "title": "Unset",
          "type": "object"
        },
        {
          "description": "Create an AI agent with a prompt.",
          "properties": {
            "ai": {
              "description": "This type defines the AI structure with 'prompt', 'post_prompt', 'post_prompt_url', 'post_prompt_auth_user', 'post_prompt_auth_password', 'params', 'SWAIG', 'hints', 'languages', and 'pronounce' parts.",
              "properties": {
                "SWAIG": {
                  "description": "The SignalWire AI Gateway (SWAIG) configuration. This is an **optional** parameter",
                  "properties": {
                    "defaults": {
                      "description": "Default settings for all SWAIG functions.\r\nIf defaults are not set, settings may be set in each function object.\r\nOptional. Default is not set.",
                      "properties": {
                        "web_hook_auth_password": {
                          "description": "The password for the webhook URL.",
                          "type": "string"
                        },
                        "web_hook_auth_user": {
                          "description": "The username for the webhook URL.",
                          "type": "string"
                        },
                        "web_hook_url": {
                          "description": "The URL to send the webhook to.",
                          "type": "string"
                        }
                      },
                      "title": "WebHookDefaults",
                      "type": "object"
                    },
                    "functions": {
                      "description": "An array of JSON objects to define functions that can be executed during the interaction with the AI.\r\nOptional. Default is not set.",
                      "items": {
                        "description": "This type defines the configuration for a SignalWire Function.",
                        "properties": {
                          "active": {
                            "description": "Whether the function is active. Optional. Default is true.",
                            "type": "boolean"
                          },
                          "argument": {
                            "description": "A JSON object defining the input that should be passed to the function.\r\nThe fields of this object are the following two parameters.",
                            "properties": {
                              "properties": {
                                "additionalProperties": {},
                                "description": "A JSON object describing the argument.\r\nThe value is set by the user.\r\nFor example, \"location\" for a location-based search or \"company\" if searching a database of companies.\r\nThis object has sub-parameters description and type to help define the property.",
                                "type": "object"
                              },
                              "type": {
                                "anyOf": [
                                  {
                                    "additionalProperties": {},
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "The type of argument the AI is passing to the function. Possible values are \"string\" and \"object\"."
                              }
                            },
                            "title": "FunctionArgument",
                            "type": "object"
                          },
                          "data_map": {
                            "description": "An object containing properties to process or validate the input,\r\nperform actions based on the input, or connect to external APIs or services in a serverless fashion.",
                            "items": {
                              "description": "An object containing properties to process or validate the input, perform actions based on the input, or connect to external APIs or services in a serverless fashion.",
                              "properties": {
                                "expressions": {
                                  "description": "An array of objects that define patterns and corresponding actions.",
                                  "items": {
                                    "description": "An object that defines patterns and corresponding actions.",
                                    "properties": {
                                      "output": {
                                        "description": "Defines the response or action to be taken when the pattern matches.",
                                        "properties": {
                                          "action": {
                                            "description": "A list of actions to be performed upon matching.",
                                            "items": {
                                              "additionalProperties": {},
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "response": {
                                            "description": "A static response text or message.",
                                            "type": "string"
                                          }
                                        },
                                        "title": "ExpressionOutput",
                                        "type": "object"
                                      },
                                      "pattern": {
                                        "description": "A regular expression pattern to validate or match the string.",
                                        "type": "string"
                                      },
                                      "string": {
                                        "description": "The actual input or value from the user or system.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Expression",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "webhooks": {
                                  "description": "An array of objects that define external API calls.",
                                  "properties": {
                                    "headers": {
                                      "additionalProperties": {},
                                      "description": "A map of headers to send to the webhook.",
                                      "type": "object"
                                    },
                                    "method": {
                                      "description": "The HTTP method to use for the webhook.",
                                      "enum": [
                                        "DELETE",
                                        "GET",
                                        "POST",
                                        "PUT"
                                      ],
                                      "type": "string"
                                    },
                                    "output": {
                                      "description": "Defines the format or structure of the response from the API.",
                                      "properties": {
                                        "action": {
                                          "description": "A list of actions to be performed upon matching.",
                                          "items": {
                                            "$ref": "#/definitions/SWMLMethod"
                                          },
                                          "type": "array"
                                        },
                                        "response": {
                                          "description": "A static response text or message based on the outcome of the API call.",
                                          "type": "string"
                                        }
                                      },
                                      "title": "WebhookOutput",
                                      "type": "object"
                                    },
                                    "url": {
                                      "description": "The endpoint for the external service or API.",
                                      "type": "string"
                                    }
                                  },
                                  "title": "WebhookConfig",
                                  "type": "object"
                                }
                              },
                              "title": "DataMap",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "function": {
                            "description": "The unique name of the function.",
                            "type": "string"
                          },
                          "meta_data": {
                            "description": "A JSON object containing any metadata, as a key-value map. Optional.\r\nDefault is not set.",
                            "items": {
                              "additionalProperties": {},
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "meta_data_token": {
                            "description": "Scoping token for meta_data.\r\nIf not supplied, metadata will be scoped to function's `web_hook_url`.\r\nOptional. Default is set by SignalWire.",
                            "type": "string"
                          },
                          "purpose": {
                            "description": "A description of the context and purpose of the function, to explain to the agent when to use it.",
                            "type": "string"
                          },
                          "web_hook_auth_pass": {
                            "description": "The password for the webhook URL.",
                            "type": "string"
                          },
                          "web_hook_auth_user": {
                            "description": "The username for the webhook URL.",
                            "type": "string"
                          },
                          "web_hook_url": {
                            "description": "The URL to send the webhook to.",
                            "type": "string"
                          }
                        },
                        "title": "FunctionConfig",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "includes": {
                      "description": "An array of objects to include remote function signatures.\r\nThe object fields are url to specify where the remote functions are defined and functions, which is an array of the function names as strings.",
                      "items": {
                        "additionalProperties": {},
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "title": "SWAIG",
                  "type": "object"
                },
                "agent": {
                  "description": "The id of the AI agent to use. This is a **required** parameter",
                  "type": "string"
                },
                "engine": {
                  "description": "The engine to use for the AI agent. This is an **optional** parameter",
                  "type": "string"
                },
                "global_data": {
                  "additionalProperties": {},
                  "description": "Optional. A powerful and flexible environmental variable which can accept arbitrary data that is set initially in the SWML script or from the SWML set_global_data action.\r\nThis data can be referenced globally. All contained information can be accessed and expanded within the prompt - for example, by using a template string. The global_data object is a dictionary of key-value pairs.",
                  "type": "object"
                },
                "hints": {
                  "description": "Words or phrases to help the AI agent understand the context of the conversation. This is an **optional** parameter",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "languages": {
                  "description": "The languages the AI agent can understand and speak. This is an **optional** parameter",
                  "items": {
                    "description": "If changing the language from the default, all three parameters are required for a valid entry.",
                    "properties": {
                      "code": {
                        "description": "The code of the language.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the language.",
                        "type": "string"
                      },
                      "voice": {
                        "description": "Optional. The voice to use for the language.",
                        "type": "string"
                      }
                    },
                    "title": "AILanguage",
                    "type": "object"
                  },
                  "type": "array"
                },
                "params": {
                  "description": "The parameters to configure the AI agent. This is an **optional** parameter",
                  "properties": {
                    "ai_volume": {
                      "description": "Optional. Volume level for the AI agent.\r\nDefault is 0.\r\nValid range is -50 to 50.",
                      "type": "number"
                    },
                    "attention_timeout": {
                      "description": "Optional. Amount of time, in ms, to wait before prompting the user to respond.\r\nDefault is 10000 milliseconds.\r\nValid range is 10000 to 600000 milliseconds.\r\nSet to 0 to disable.",
                      "type": "number"
                    },
                    "background_file": {
                      "description": "Optional. URL of audio file to play in the background while AI plays in the foreground.",
                      "type": "string"
                    },
                    "background_file_loops": {
                      "description": "Optional. Maximum number of times to loop playing the background file.\r\nDefault is undefined. (Loop indefinitely)",
                      "type": "number"
                    },
                    "background_file_volume": {
                      "description": "Optional. Volume level for the background file.\r\nDefault is 0.\r\nValid range is -40 to 40.",
                      "type": "number"
                    },
                    "conscience": {
                      "description": "Optional. Send a summary of the conversation after the call ends.\r\nThis requires a `post_url` to be set in the ai parameters and the `conversation_id` defined below.\r\nThis eliminates the need for a `post_prompt` in the ai parameters.\r\nDefault is false.",
                      "type": "boolean"
                    },
                    "conversation_id": {
                      "description": "Optional. Unique identifier for this conversation to be used to retain info from call to call.",
                      "type": "string"
                    },
                    "digit_terminators": {
                      "description": "Optional. DTMF digit, as a string, to signal the end of input (ex: \"#\").",
                      "type": "string"
                    },
                    "digit_timeout": {
                      "description": "Optional. Time, in ms, at the end of digit input to detect the end of input.\r\nDefault is 3000 milliseconds.\r\nValid range is 250 to 10000 milliseconds.",
                      "type": "number"
                    },
                    "direction": {
                      "description": "The direction of the AI agent. Can be \"inbound\" or \"outbound\".",
                      "enum": [
                        "inbound",
                        "outbound"
                      ],
                      "type": "string"
                    },
                    "end_of_speech_timeout": {
                      "description": "Optional. The time in milliseconds to wait for the user to stop speaking. Default is 2000 milliseconds.\r\nValid range is 250 to 10000 milliseconds.",
                      "type": "number"
                    },
                    "energy_level": {
                      "description": "Optional. Amount of energy necessary for bot to hear you (in dB).\r\nDefault is 52.\r\nThe Valid range is 0.0 to -100.0.",
                      "type": "number"
                    },
                    "inactivity_timeout": {
                      "description": "Optional. Amount of time, in ms, to wait before exiting the app due to inactivity.\r\nDefault is 600000 milliseconds.\r\nValid range is 10000 to 3600000 milliseconds.",
                      "type": "number"
                    },
                    "local_tz": {
                      "description": "Optional. Timezone to use for the AI agent. Values are IANA time zone ID's.\r\nDefault is \"GMT\".",
                      "type": "string"
                    },
                    "save_conversation": {
                      "description": "Optional. Save the conversation.\r\nDefault is false.",
                      "type": "boolean"
                    },
                    "swaig_allow_swml": {
                      "description": "Optional. Allow SWAIG functions to return SWML to be executed by the call?\r\nDefault is true.",
                      "type": "boolean"
                    },
                    "wait_for_user": {
                      "description": "Optional. If true, the AI agent will wait for the user to speak before responding. Default is false.",
                      "type": "boolean"
                    }
                  },
                  "title": "AIParams",
                  "type": "object"
                },
                "post_prompt": {
                  "description": "Establishes the follow-up set of instructions and settings to configure the agent. This is an **optional** parameter",
                  "properties": {
                    "confidence": {
                      "description": "Threshold to fire a speech-detect event at the end of the utterance.\r\nFloat value between 0.0 and 1.0.\r\nDecreasing this value will reduce the pause after the user speaks, but may introduce false positives.\r\nDefault is 0.6.",
                      "type": "number"
                    },
                    "frequency_penalty": {
                      "description": "Aversion to repeating lines.\r\nFloat value between -2.0 and 2.0.\r\nPositive values decrease the model's likelihood to repeat the same line verbatim.\r\nDefault is 0.0.",
                      "type": "number"
                    },
                    "presence_penalty": {
                      "description": "Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics. Default is 0.0.",
                      "type": "number"
                    },
                    "temperature": {
                      "description": "Randomness setting. Float value between 0.0 and 1.5.\r\nCloser to 0 will make the output less random.\r\nDefault is 1.0.",
                      "type": "number"
                    },
                    "text": {
                      "description": "The instructions to send to the AI agent.",
                      "type": "string"
                    },
                    "top_p": {
                      "description": "Randomness setting. Alternative to `temperature`.\r\nFloat value between 0.0 and 1.0.\r\nCloser to 0 will make the output less random. Default is 1.0.",
                      "type": "number"
                    }
                  },
                  "title": "AIPrompt",
                  "type": "object"
                },
                "post_prompt_auth_password": {
                  "description": "The password for the post-prompt URL. This is an **optional** parameter",
                  "type": "string"
                },
                "post_prompt_auth_user": {
                  "description": "The username for the post-prompt URL. This is an **optional** parameter",
                  "type": "string"
                },
                "post_prompt_url": {
                  "description": "The URL to send the post-prompt to. This is an **optional** parameter",
                  "type": "string"
                },
                "prompt": {
                  "description": "Establishes the initial set of instructions and settings to configure the agent. This is a **required** parameter",
                  "properties": {
                    "confidence": {
                      "description": "Threshold to fire a speech-detect event at the end of the utterance.\r\nFloat value between 0.0 and 1.0.\r\nDecreasing this value will reduce the pause after the user speaks, but may introduce false positives.\r\nDefault is 0.6.",
                      "type": "number"
                    },
                    "frequency_penalty": {
                      "description": "Aversion to repeating lines.\r\nFloat value between -2.0 and 2.0.\r\nPositive values decrease the model's likelihood to repeat the same line verbatim.\r\nDefault is 0.0.",
                      "type": "number"
                    },
                    "presence_penalty": {
                      "description": "Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics. Default is 0.0.",
                      "type": "number"
                    },
                    "temperature": {
                      "description": "Randomness setting. Float value between 0.0 and 1.5.\r\nCloser to 0 will make the output less random.\r\nDefault is 1.0.",
                      "type": "number"
                    },
                    "text": {
                      "description": "The instructions to send to the AI agent.",
                      "type": "string"
                    },
                    "top_p": {
                      "description": "Randomness setting. Alternative to `temperature`.\r\nFloat value between 0.0 and 1.0.\r\nCloser to 0 will make the output less random. Default is 1.0.",
                      "type": "number"
                    }
                  },
                  "title": "AIPrompt",
                  "type": "object"
                },
                "pronounce": {
                  "description": "Words or phrases to help the AI agent pronounce correctly. This is an **optional** parameter",
                  "items": {
                    "description": "Use this object to clarify AI's pronunciation of certain words or expressions.",
                    "properties": {
                      "ignore_case": {
                        "description": "Optional. If true, the AI agent will ignore the case when replacing the word or phrase. Default is false.",
                        "type": "boolean"
                      },
                      "replace": {
                        "description": "The word or phrase to replace.",
                        "type": "string"
                      },
                      "with": {
                        "description": "The word or phrase to replace with.",
                        "type": "string"
                      }
                    },
                    "title": "AIPronounce",
                    "type": "object"
                  },
                  "type": "array"
                },
                "voice": {
                  "description": "DEPRECATED use the `languages` parameter instead. The voice to use for the AI agent. This is an **optional** parameter.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "AI",
          "type": "object"
        },
        {
          "description": "Answer incoming call and set an optional maximum duration.",
          "properties": {
            "answer": {
              "properties": {
                "codecs": {
                  "description": "Optional. Comma-separated string of codecs to offer.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "fsvars": {
                  "additionalProperties": {},
                  "description": "Optional. FreeSWITCH variables to set.",
                  "type": "object"
                },
                "max_duration": {
                  "description": "Maximum time in seconds to wait for an answer.\r\nCannot be less than 7 seconds.\r\nDefault is 14400 seconds.",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "title": "Answer",
          "type": "object"
        },
        {
          "description": "Dial a SIP URI or phone number.",
          "properties": {
            "connect": {
              "description": "Defines the connect structure",
              "properties": {
                "answer_on_bridge": {
                  "description": "Optional. Delay answer until the B-leg answers.\r\nDefault is false.",
                  "type": "boolean"
                },
                "call_state_events": {
                  "description": "Optional. An array of call state event names to be notified about.\r\nAllowed event names are `created`, `ringing`, `answered`, and `ended`.\r\nIt can be overwritten on each destination.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "call_state_url": {
                  "description": "Optional. Webhook url to send call state change notifications to for all legs.\r\nIt can be overwritten on each destination.",
                  "type": "string"
                },
                "codecs": {
                  "description": "Optional. Comma-separated string of codecs to offer.\r\nIt has no effect on calls to phone numbers.\r\nBased on SignalWire settings.",
                  "type": "string"
                },
                "confirm": {
                  "additionalProperties": {},
                  "type": "object"
                },
                "confirm_timeout": {
                  "type": "number"
                },
                "encryption": {
                  "enum": [
                    "forbidden",
                    "mandatory",
                    "optional"
                  ],
                  "type": "string"
                },
                "from": {
                  "description": "Optional. The caller ID to use when dialing the number.",
                  "type": "string"
                },
                "fsvars": {
                  "additionalProperties": {},
                  "type": "object"
                },
                "headers": {
                  "additionalProperties": {},
                  "description": "Optional. Custom SIP headers to add to INVITE.\r\nIt Has no effect on calls to phone numbers.",
                  "type": "object"
                },
                "max_duration": {
                  "description": "Optional. Maximum duration, in seconds, allowed for the call.\r\nDefault is 14400 seconds.",
                  "type": "number"
                },
                "parallel": {
                  "items": {
                    "properties": {
                      "call_state_events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "call_state_url": {
                        "type": "string"
                      },
                      "codecs": {
                        "type": "string"
                      },
                      "confirm": {
                        "additionalProperties": true,
                        "properties": {},
                        "type": "object"
                      },
                      "confirm_timeout": {
                        "type": "number"
                      },
                      "encryption": {
                        "enum": [
                          "forbidden",
                          "mandatory",
                          "optional"
                        ],
                        "type": "string"
                      },
                      "from": {
                        "type": "string"
                      },
                      "fsvars": {
                        "additionalProperties": true,
                        "properties": {},
                        "type": "object"
                      },
                      "headers": {
                        "items": {
                          "additionalProperties": true,
                          "properties": {},
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "password": {
                        "type": "string"
                      },
                      "session_timeout": {
                        "type": "number"
                      },
                      "timeout": {
                        "type": "number"
                      },
                      "to": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "webrtc_media": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "password": {
                  "type": "string"
                },
                "ringback": {
                  "description": "Optional. Array of URIs to play as ringback tone.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "serial": {
                  "items": {
                    "properties": {
                      "call_state_events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "call_state_url": {
                        "type": "string"
                      },
                      "codecs": {
                        "type": "string"
                      },
                      "confirm": {
                        "additionalProperties": true,
                        "properties": {},
                        "type": "object"
                      },
                      "confirm_timeout": {
                        "type": "number"
                      },
                      "encryption": {
                        "enum": [
                          "forbidden",
                          "mandatory",
                          "optional"
                        ],
                        "type": "string"
                      },
                      "from": {
                        "type": "string"
                      },
                      "fsvars": {
                        "additionalProperties": true,
                        "properties": {},
                        "type": "object"
                      },
                      "headers": {
                        "items": {
                          "additionalProperties": true,
                          "properties": {},
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "password": {
                        "type": "string"
                      },
                      "session_timeout": {
                        "type": "number"
                      },
                      "timeout": {
                        "type": "number"
                      },
                      "to": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "webrtc_media": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "serial_parallel": {
                  "items": {
                    "items": {
                      "properties": {
                        "call_state_events": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "call_state_url": {
                          "type": "string"
                        },
                        "codecs": {
                          "type": "string"
                        },
                        "confirm": {
                          "additionalProperties": true,
                          "properties": {},
                          "type": "object"
                        },
                        "confirm_timeout": {
                          "type": "number"
                        },
                        "encryption": {
                          "enum": [
                            "forbidden",
                            "mandatory",
                            "optional"
                          ],
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "fsvars": {
                          "additionalProperties": true,
                          "properties": {},
                          "type": "object"
                        },
                        "headers": {
                          "items": {
                            "additionalProperties": true,
                            "properties": {},
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "password": {
                          "type": "string"
                        },
                        "session_timeout": {
                          "type": "number"
                        },
                        "timeout": {
                          "type": "number"
                        },
                        "to": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "webrtc_media": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                "session_timeout": {
                  "description": "Optional. Time, in seconds, to set the SIP `Session-Expires` header in INVITE.\r\nMust be a positive, non-zero number.\r\nIt has no effect on calls to phone numbers.\r\nBased on SignalWire settings.",
                  "type": "number"
                },
                "timeout": {
                  "description": "Optional. Time, in seconds, to wait for the call to be answered.\r\nDefault is 60 seconds.",
                  "type": "number"
                },
                "to": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "webrtc_media": {
                  "description": "Optional. If true, WebRTC media is offered to the SIP endpoint.\r\nIt has no effect on calls to phone numbers.\r\nDefault is false.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "title": "Connect",
          "type": "object"
        },
        {
          "description": "Jump to a specified label.",
          "properties": {
            "goto": {
              "description": "Defines the goto structure",
              "properties": {
                "label": {
                  "description": "Specifies the label to jump to. Must be a valid SWML label.",
                  "properties": {
                    "label": {
                      "description": "The name of the label.",
                      "type": "string"
                    }
                  },
                  "title": "Label",
                  "type": "object"
                },
                "max": {
                  "description": "Optional maximum number of times to perform the jump. Must be a number between 1 and 100.",
                  "type": "number"
                },
                "when": {
                  "description": "Optional condition under which the jump is performed.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Goto",
          "type": "object"
        },
        {
          "description": "Defines a label that can be jumped to using the Goto method.",
          "properties": {
            "label": {
              "description": "The name of the label.",
              "type": "string"
            }
          },
          "title": "Label",
          "type": "object"
        },
        {
          "description": "Start noise reduction.",
          "properties": {
            "denoise": {
              "properties": {},
              "type": "object"
            }
          },
          "title": "Denoise",
          "type": "object"
        },
        {
          "description": "Hangup the call.",
          "properties": {
            "hangup": {
              "properties": {
                "reason": {
                  "description": "The reason for hanging up the call.",
                  "enum": [
                    "busy",
                    "decline",
                    "hangup"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Hangup",
          "type": "object"
        },
        {
          "description": "Join a RELAY room.",
          "properties": {
            "join_room": {
              "description": "Defines the join_room structure",
              "properties": {
                "name": {
                  "description": "The name of the room to join.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "JoinRoom",
          "type": "object"
        },
        {
          "description": "Play file(s), ringtones, speech or silence.",
          "properties": {
            "play": {
              "description": "Defines the play structure",
              "properties": {
                "auto_answer": {
                  "type": "boolean"
                },
                "say_gender": {
                  "description": "Optional. Gender to use for the text to speech.",
                  "type": "string"
                },
                "say_language": {
                  "description": "Optional. The language to use for the text to speech.",
                  "type": "string"
                },
                "say_voice": {
                  "description": "Optional. The voice to use for the text to speech.",
                  "type": "string"
                },
                "url": {
                  "description": "Optional. URL or array of URLs to play.\r\nAllowed URLs are:\r\nhttp:// or https:// - audio file to GET\r\nring:[duration:]<country code> - ring tone to play. For example: ring:us to play single ring or ring:20.0:us to play ring for 20 seconds.\r\nsay:<text to speak> - Sentence to say\r\nsilence: <duration> - seconds of silence to play",
                  "type": "string"
                },
                "urls": {
                  "description": "Optional. URL or array of URLs to play.\r\nAllowed URLs are:\r\nhttp:// or https:// - audio file to GET\r\nring:[duration:]<country code> - ring tone to play. For example: ring:us to play single ring or ring:20.0:us to play ring for 20 seconds.\r\nsay:<text to speak> - Sentence to say\r\nsilence: <duration> - seconds of silence to play",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "volume": {
                  "description": "Optional. Volume level for the audio file.\r\nDefault is 0.\r\nValid range is -40 to 40.",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "title": "Play",
          "type": "object"
        },
        {
          "description": "Play a prompt and wait for digit or speech input.\r\nSpeech detection is not enabled unless at least one speech parameter is set.\r\nIf only speech parameters are set (and no digit parameters), digit detection is not enabled.\r\nTo enable both digit and speech detection, set at least one parameter for each.",
          "properties": {
            "prompt": {
              "description": "Defines the prompt structure",
              "properties": {
                "digit_timeout": {
                  "description": "Optional. Time in seconds to wait for next digit.\r\nDefault is 5.0 seconds.",
                  "type": "number"
                },
                "initial_timeout": {
                  "description": "Optional. Time in seconds to wait for start of input.\r\nDefault is 5.0 seconds.",
                  "type": "number"
                },
                "max_digits": {
                  "description": "Optional. Number of digits to collect. Default is 1.",
                  "type": "number"
                },
                "play": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "URL or array of URLs to play.\r\nAllowed URLs are:\r\nhttp:// or https:// - audio file to GET\r\nring:[duration:]<country code> - ring tone to play. For example: ring:us to play single ring or ring:20.0:us to play ring for 20 seconds.\r\nsay:<text to speak> - Sentence to say\r\nsilence: <duration> - seconds of silence to play"
                },
                "say_gender": {
                  "description": "Optional. The gender to use for the text to speech.",
                  "type": "string"
                },
                "say_language": {
                  "description": "Optional. The language to use for the text to speech.",
                  "type": "string"
                },
                "say_voice": {
                  "description": "Optional. The voice to use for the text to speech.",
                  "type": "string"
                },
                "speech_end_timeout": {
                  "description": "Optional. Time in seconds to wait for end of speech utterance.",
                  "type": "number"
                },
                "speech_engine": {
                  "description": "Optional. Speech recognition engine to use.",
                  "type": "string"
                },
                "speech_hints": {
                  "description": "Optional. Words or phrases to help the speech recognition.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "speech_language": {
                  "description": "Optional. Language to detect speech in.",
                  "type": "string"
                },
                "speech_timeout": {
                  "description": "Optional. Max time in seconds to wait for speech result.",
                  "type": "number"
                },
                "terminators": {
                  "description": "Optional. Digits that terminate digit collection.",
                  "type": "string"
                },
                "volume": {
                  "description": "Optional. Volume level for the audio file.\r\nDefault is 0.\r\nValid range is -40 to 40.",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "title": "Prompt",
          "type": "object"
        },
        {
          "description": "Receive a fax.",
          "properties": {
            "receive_fax": {
              "properties": {},
              "type": "object"
            }
          },
          "title": "ReceiveFax",
          "type": "object"
        },
        {
          "description": "Record the call audio in the foreground. Use this, for example, to record voicemails.",
          "properties": {
            "record": {
              "properties": {
                "beep": {
                  "description": "Optional. Play a beep before recording. Default is false.",
                  "type": "boolean"
                },
                "direction": {
                  "description": "Optional. Direction of the audio to record: \"speak\" for what party says, \"listen\" for what party hears.\r\nDefault is \"speak\".",
                  "enum": [
                    "listen",
                    "speak"
                  ],
                  "type": "string"
                },
                "end_silence_timeout": {
                  "description": "Optional. Time in seconds to wait in silence before ending the recording.\r\nDefault is 5.0 seconds.",
                  "type": "number"
                },
                "format": {
                  "description": "Optional. The format to record in. Can be \"wav\" or \"mp3\". Default is \"wav\".",
                  "enum": [
                    "mp3",
                    "wav"
                  ],
                  "type": "string"
                },
                "initial_timeout": {
                  "description": "Optional. Time in seconds to wait for the start of speech. Default is 4.0 seconds.",
                  "type": "number"
                },
                "input_sensitivity": {
                  "description": "Optional. Input sensitivity for the recording. Default is 44.0.",
                  "type": "number"
                },
                "max_length": {
                  "description": "Optional. Maximum length of the recording in seconds.",
                  "type": "number"
                },
                "status_url": {
                  "description": "Optional. URL to send recording status events to.",
                  "type": "string"
                },
                "stereo": {
                  "description": "Optional. If true, record in stereo. Default is false.",
                  "type": "boolean"
                },
                "terminators": {
                  "description": "Optional. String of digits that will stop the recording when pressed.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Record",
          "type": "object"
        },
        {
          "description": "Record the call audio in the background.",
          "properties": {
            "record_call": {
              "description": "Defines the record_call structure",
              "properties": {
                "beep": {
                  "description": "Optional. Play a beep before recording. Default is false.",
                  "type": "boolean"
                },
                "control_id": {
                  "description": "Optional. Identifier for this recording, to use with `stop_call_record`.",
                  "type": "string"
                },
                "direction": {
                  "description": "Optional. Direction of the audio to record: \"speak\" for what party says, \"listen\" for what party hears, \"both\" for what the party hears and says.\r\nDefault is \"both\".",
                  "enum": [
                    "both",
                    "listen",
                    "speak"
                  ],
                  "type": "string"
                },
                "end_silence_timeout": {
                  "description": "Optional. Time in seconds to wait in silence before ending the recording.\r\nDefault is 0.0 seconds.",
                  "type": "number"
                },
                "format": {
                  "description": "Optional. The format to record in. It can be \"wav\" or \"mp3\". Default is \"wav\".",
                  "enum": [
                    "mp3",
                    "wav"
                  ],
                  "type": "string"
                },
                "initial_timeout": {
                  "description": "Optional. Time in seconds to wait for the start of speech. Default is 0.0 seconds.",
                  "type": "number"
                },
                "input_sensitivity": {
                  "description": "Optional. Input sensitivity for the recording. Default is 44.0.",
                  "type": "number"
                },
                "max_length": {
                  "description": "Optional. Maximum length of the recording in seconds.",
                  "type": "number"
                },
                "stereo": {
                  "description": "Optional. If true, record in stereo. Default is false.",
                  "type": "boolean"
                },
                "terminators": {
                  "description": "Optional. String of digits that will stop the recording when pressed.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "RecordCall",
          "type": "object"
        },
        {
          "description": "Send DTMF digits.",
          "properties": {
            "send_digits": {
              "description": "Defines the send_digits structure",
              "properties": {
                "digits": {
                  "description": "The DTMF digits to send.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "SendDigits",
          "type": "object"
        },
        {
          "description": "Send a fax.",
          "properties": {
            "send_fax": {
              "description": "Defines the send_fax structure",
              "properties": {
                "document": {
                  "description": "URL to the PDF document to fax.",
                  "type": "string"
                },
                "header_info": {
                  "description": "Optional. Header text to include on the fax.",
                  "type": "string"
                },
                "identity": {
                  "description": "Optional. Station identity to report. Default is the calling party's caller ID number.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "SendFax",
          "type": "object"
        },
        {
          "description": "Send an SMS message.",
          "properties": {
            "send_sms": {
              "description": "Defines the send_sms structure",
              "properties": {
                "body": {
                  "description": "The body of the SMS message.",
                  "type": "string"
                },
                "from_number": {
                  "description": "Optional. The phone number to send the SMS from. Default is the calling party's caller ID number.",
                  "type": "string"
                },
                "media": {
                  "description": "Optional. Array of media URLs to include in the message.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "region": {
                  "description": "Optional. The region to use for the SMS. Default is \"us\".\r\nDefault is picked based on account preferences or device location.",
                  "type": "string"
                },
                "tags": {
                  "description": "Optional. Array of tags to associate with the message to facilitate log searches.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "to_number": {
                  "description": "The phone number to send the SMS to.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "SendSMS",
          "type": "object"
        },
        {
          "description": "Send SIP REFER to a SIP call.",
          "properties": {
            "sip_refer": {
              "description": "Defines the sip_refer structure",
              "properties": {
                "to": {
                  "description": "Optional. The target destination for the SIP REFER.",
                  "type": "string"
                },
                "to_uri": {
                  "description": "The SIP URI to send the REFER to.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "SipRefer",
          "type": "object"
        },
        {
          "description": "Stop noise reduction.",
          "properties": {
            "stop_denoise": {
              "description": "Defines the stop_denoise structure",
              "properties": {},
              "type": "object"
            }
          },
          "title": "StopDenoise",
          "type": "object"
        },
        {
          "description": "Stop an active background recording.",
          "properties": {
            "stop_record_call": {
              "description": "Defines the stop_record_call structure",
              "properties": {
                "control_id": {
                  "description": "Identifier for the recording to stop.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "StopRecordCall",
          "type": "object"
        },
        {
          "description": "Stop an active tap stream.",
          "properties": {
            "stop_tap": {
              "description": "Defines the stop_tap structure",
              "properties": {
                "control_id": {
                  "description": "ID of the tap to stop.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "StopTap",
          "type": "object"
        },
        {
          "description": "Start background call tap. Media is streamed over Websocket or RTP to customer controlled URI.",
          "properties": {
            "tap": {
              "description": "Defines the tap structure",
              "properties": {
                "codec": {
                  "description": "Optional. Codec to use for the tap media stream. Options are \"PCMU\" and \"PCMA\".\r\nDefault is \"PCMU\".",
                  "type": "string"
                },
                "control_id": {
                  "description": "Optional. Identifier for this tap to use with stop_tap.",
                  "type": "string"
                },
                "direction": {
                  "description": "Optional. Direction of the audio to tap: `speak` for what party says,\r\n`listen` for what party hears,\r\n`both` for what party hears and says.\r\nDefault is `both`.",
                  "type": "string"
                },
                "rtp_ptime": {
                  "description": "Optional. Set the packetization time of the media in milliseconds.\r\nDefault is 20 milliseconds.",
                  "type": "number"
                },
                "uri": {
                  "description": "Destination of the tap media stream.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "title": "Tap",
          "type": "object"
        },
        {
          "description": "Conditional execution of a sequence of instructions based on a condition.",
          "properties": {
            "if": {
              "description": "Defines the if structure",
              "properties": {
                "condition": {
                  "description": "The condition to be evaluated and act on.",
                  "type": "string"
                },
                "else": {
                  "description": "The list of SWML instructions to be executed if the condition is false.",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                },
                "then": {
                  "description": "The list of SWML instructions to be executed if the condition is true.",
                  "items": {
                    "$ref": "#/definitions/SWMLMethod"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "title": "If",
          "type": "object"
        },
        {
          "enum": [
            "answer",
            "denoise",
            "hangup",
            "receive_fax",
            "record",
            "return",
            "stop_denoise",
            "stop_record_call",
            "stop_tap",
            {}
          ],
          "type": "string"
        }
      ]
    }
  },
  "description": "The main object that includes the version and sections containing instructions.",
  "properties": {
    "sections": {
      "additionalProperties": {
        "items": {
          "$ref": "#/definitions/SWMLMethod"
        },
        "type": "array"
      },
      "properties": {
        "main": {
          "items": {
            "$ref": "#/definitions/SWMLMethod"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "version": {
      "const": "1.0.0",
      "type": "string"
    }
  },
  "title": "SWMLObject",
  "type": "object"
}